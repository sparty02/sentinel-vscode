<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<key>name</key>
		<string>Sentinel</string>
		<key>comment</key>
		<string>Sentinel Syntax</string>
		<key>scopeName</key>
		<string>source.sentinel</string>
		<key>uuid</key>
		<string>93E017CC-6F27-11D9-90EB-000D93589AF6</string>
		<key>fileTypes</key>
		<array>
			<string>sentinel</string>
		</array>
		<key>firstLineMatch</key>
		<string>^#!.*\b(sentinel)</string>
		<key>keyEquivalent</key>
		<string>^~J</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>name</key>
				<string>meta.import.sentinel</string>
				<key>begin</key>
				<string>(?&lt;!\.)\b(import)(?!\s*:)\b</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>keyword.control.import.sentinel</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(;)|\n|(?=//)</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.terminator.statement.sentinel</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#strings</string>
					</dict>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
					<dict>
						<key>name</key>
						<string>punctuation.separator.object.sentinel</string>
						<key>match</key>
						<string>,</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.function.sentinel</string>
				<key>comment</key>
				<string>Match function, optional function name and optional function arguments</string>
				<key>begin</key>
				<string>func</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>meta.function.variable.sentinel</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.sentinel</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>storage.type.function.sentinel</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.sentinel</string>
					</dict>
					<key>5</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.sentinel</string>
					</dict>
					<key>6</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.sentinel</string>
					</dict>
				</dict>
				<key>end</key>
				<string>(\))</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.end.sentinel</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.method.sentinel</string>
				<key>begin</key>
				<string>
					(?x)
					\b
					(?: (static) \s+ )?                                             # Optional static keyword
					(?!                                                             # Dont match known keywords
					(?:async|await|break|case|catch|continue|do|else|finally|for|func|if|
					export|import|package|return|switch|throw|try|while|with)
					[\s\(]
					)
					([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)
					\s*
					(\()
					(?=(?:[^\(\)]*)?\)\s*\{)
				</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.static.sentinel</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.function.sentinel</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.sentinel</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.definition.parameters.begin.sentinel</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-params</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.class.sentinel</string>
				<key>begin</key>
				<string>
					(?x)
					\b(class)(?=\s|$)
					(?:
					\s+
					([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)
					)?
					(?:
					\s+
					(extends)
					\s+
					(?:\b([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}\.]*)\b(?![\(]))?
					)?
				</string>
				<key>beginCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>storage.type.class.sentinel</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>entity.name.type.class.sentinel</string>
					</dict>
					<key>3</key>
					<dict>
						<key>name</key>
						<string>storage.modifier.sentinel</string>
					</dict>
					<key>4</key>
					<dict>
						<key>name</key>
						<string>entity.other.inherited-class.sentinel</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\s*($|(?=\{))</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#function-call</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>comment</key>
				<string>Dont scope preceding whitespace as string.regex</string>
				<key>begin</key>
				<string>(?&lt;=[\[=(?:+,!]|^|return|=&gt;|&amp;&amp;|\|\|)\s*(?=/[^/*+?].*/)</string>
				<key>end</key>
				<string>(?&lt;=[/igmuy])</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>string.regexp.sentinel</string>
						<key>begin</key>
						<string>/</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.begin.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(/)[igmuy]*</string>
						<key>endCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.end.sentinel</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>source.sentinel.regexp</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.ternary-if.sentinel</string>
				<key>comment</key>
				<string>Matching as a capture group prevents false positives with other uses of :</string>
				<key>begin</key>
				<string>\?</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.ternary.sentinel</string>
					</dict>
				</dict>
				<key>end</key>
				<string>([^:"'`\[\]{}()]*)(:)</string>
				<key>endCaptures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>$self</string>
							</dict>
						</array>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>keyword.operator.ternary.sentinel</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$self</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>name</key>
				<string>entity.name.function.sentinel</string>
				<key>match</key>
				<string>(?&lt;!\w)[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*(?=\s*:\s*func\b)</string>
			</dict>
			<dict>
				<key>name</key>
				<string>entity.name.type.attribute-name.sentinel</string>
				<key>match</key>
				<string>(?&lt;!\w)[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*(?=\s*:)</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#numbers</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#strings</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#comments</string>
			</dict>
			<dict>
				<key>include</key>
				<string>#operators</string>
			</dict>
			<dict>
				<key>name</key>
				<string>keyword.control.sentinel</string>
				<key>match</key>
				<string>(?&lt;!\.|\$)\b(async|await|break|case|catch|continue|default|do|else|export|finally|for|if|return|switch|throw|try|while|with)\b(?!\$)</string>
			</dict>
			<dict>
				<key>name</key>
				<string>keyword.operator.sentinel</string>
				<key>match</key>
				<string>(?&lt;!\.|\$)\b(as|func)\b(?!\$)</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.class.sentinel</string>
				<key>match</key>
				<string>(?&lt;!\.|\$)\b(Array|Boolean|Date|Error|EvalError|Function|Map|Number|Object|Promise|Proxy|RangeError|ReferenceError|Reflect|RegExp|Set|String|SyntaxError|TypeError|URIError|WeakMap|WeakSet)\b(?!\$)</string>
			</dict>
			<dict>
				<key>name</key>
				<string>invalid.illegal.sentinel</string>
				<key>comment</key>
				<string>Keywords used in an invalid context</string>
				<key>match</key>
				<string>(?&lt;!\.|\$)\b(class|func|static|extends)\b(?!\$)</string>
			</dict>
			<dict>
				<key>name</key>
				<string>constant.language.sentinel</string>
				<key>match</key>
				<string>\b(false|Infinity|NaN|null|true|undefined)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>punctuation.terminator.statement.sentinel</string>
				<key>match</key>
				<string>\;</string>
			</dict>
			<dict>
				<key>comment</key>
				<string>Allows the special return snippet to fire.</string>
				<key>captures</key>
				<dict>
					<key>1</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.begin.sentinel</string>
					</dict>
					<key>2</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.end.sentinel</string>
					</dict>
				</dict>
				<key>match</key>
				<string>(\[)(\])</string>
			</dict>
			<dict>
				<key>begin</key>
				<string>\{</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.begin.sentinel</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\}</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.end.sentinel</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$self</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>begin</key>
				<string>\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.begin.sentinel</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.scope.end.sentinel</string>
					</dict>
				</dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$self</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.brace.square.sentinel</string>
				<key>match</key>
				<string>\[|\]</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>comments</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>comment.block.documentation.sentinel</string>
						<key>begin</key>
						<string>/\*\*(?!/|\*)</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.begin.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\*/</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.end.sentinel</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>(?&lt;!\w)@(abstract|access|alias|arg|argument|async|attribute|augments|author|beta|borrows|bubbes|callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright|default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exports?|extends|extension|extension_for|extensionfor|external|file|fileoverview|final|fires|for|func|global|host|ignore|implements|inherit[Dd]oc|inner|instance|interface|kind|lends|license|listens|main|member|memberof|method|mixex|mixins?|module|name|namespace|nocollapse|nosideeffects|override|overview|package|param|preserve|private|prop|property|protected|public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation|version|virtual|writeOnce)\b</string>
								<key>name</key>
								<string>keyword.other.documentation.sentinel</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>name</key>
						<string>comment.block.sentinel</string>
						<key>begin</key>
						<string>/\*</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.begin.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\*/</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.end.sentinel</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>begin</key>
						<string>(^[ \t]+)?(?=//)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>punctuation.whitespace.comment.leading.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?!\G)</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>begin</key>
								<string>//</string>
								<key>beginCaptures</key>
								<dict>
									<key>0</key>
									<dict>
										<key>name</key>
										<string>punctuation.definition.comment.sentinel</string>
									</dict>
								</dict>
								<key>end</key>
								<string>\n</string>
								<key>name</key>
								<string>comment.line.double-slash.sentinel</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>function-call</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Matches the function calls.</string>
						<key>begin</key>
						<string>(?&lt;!\w)([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)(\()</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>meta.function-call.sentinel</string>
							</dict>
							<key>2</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.function-call.begin.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\)</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.function-call.end.sentinel</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>$self</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>function-params</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>comment</key>
						<string>Matches valid argument, function and variable names.  To be thorough: https://github.com/mathiasbynens/mothereff.in/tree/master/js-variables</string>
						<key>begin</key>
						<string>(?=[\p{L}\p{Nl}$_])|(\.\.\.)</string>
						<key>beginCaptures</key>
						<dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>keyword.operator.rest-parameters.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>(?=[,)/])</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>match</key>
								<string>\G[\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*</string>
								<key>name</key>
								<string>variable.parameter.function.sentinel</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#function-call</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#numbers</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#strings</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#comments</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#operators</string>
							</dict>
							<dict>
								<key>match</key>
								<string>(?&lt;!\.)\b(super|this)(?!\s*:)\b</string>
								<key>name</key>
								<string>variable.language.sentinel</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>include</key>
						<string>#comments</string>
					</dict>
				</array>
			</dict>
			<key>numbers</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>constant.numeric.hex.sentinel</string>
						<key>match</key>
						<string>(?&lt;!\w|\$)0[xX]\h+\b</string>
					</dict>
					<dict>
						<key>name</key>
						<string>constant.numeric.binary.sentinel</string>
						<key>match</key>
						<string>(?&lt;!\w|\$)0[bB][01]+\b</string>
					</dict>
					<dict>
						<key>name</key>
						<string>constant.numeric.octal.sentinel</string>
						<key>match</key>
						<string>(?&lt;!\w|\$)0[oO][0-7]+\b</string>
					</dict>
					<dict>
						<key>name</key>
						<string>constant.numeric.sentinel</string>
						<key>match</key>
						<string>
							(?x)
							(?&lt;!\w|\$)							    # Ensure word boundry
							[+-]?                                   # Optional sign
							(?&gt;
							(
							(0|[1-9][0-9]*)(\.[0-9]*)?		# 0 or 1 or 1. or 1.0
							| \.[0-9]+						# .1
							)
							([eE][+-]?[0-9]+)?					# Exponent
							)
							(?!\w)									# Ensure word boundry
						</string>
					</dict>
				</array>
			</dict>
			<key>operators</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.compound.sentinel</string>
						<key>match</key>
						<string>%=|\+=|\-=|\*=|(?&lt;!\()/=</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.compound.bitwise.sentinel</string>
						<key>match</key>
						<string>&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\|=</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.comparison.sentinel</string>
						<key>match</key>
						<string>!==|!=|&lt;=|&gt;=|===|==|&lt;|&gt;</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.logical.sentinel</string>
						<key>match</key>
						<string>&amp;&amp;|!|\|\|</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.bitwise.sentinel</string>
						<key>match</key>
						<string>&amp;|\||\^|~</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.sentinel</string>
						<key>match</key>
						<string>\:</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.logical.sentinel</string>
						<key>match</key>
						<string>!</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.assignment.sentinel</string>
						<key>match</key>
						<string>=|\:</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.decrement.sentinel</string>
						<key>match</key>
						<string>\-\-</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.increment.sentinel</string>
						<key>match</key>
						<string>\+\+</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.arithmetic.sentinel</string>
						<key>match</key>
						<string>%|\*|/|\-|\+</string>
					</dict>
					<dict>
						<key>name</key>
						<string>keyword.operator.spread.sentinel</string>
						<key>match</key>
						<string>\.\.\.</string>
					</dict>
				</array>
			</dict>
			<key>strings</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>name</key>
						<string>string.quoted.single.sentinel</string>
						<key>begin</key>
						<string>'</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.begin.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>'</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.end.sentinel</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escapes</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\\\n</string>
								<key>name</key>
								<string>constant.character.escape.newline.sentinel</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\n</string>
								<key>name</key>
								<string>invalid.illegal.character-not-allowed-here.sentinel</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>name</key>
						<string>string.quoted.double.sentinel</string>
						<key>begin</key>
						<string>"</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.begin.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>"</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.end.sentinel</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escapes</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\\\n</string>
								<key>name</key>
								<string>constant.character.escape.newline.sentinel</string>
							</dict>
							<dict>
								<key>match</key>
								<string>\n</string>
								<key>name</key>
								<string>invalid.illegal.character-not-allowed-here.sentinel</string>
							</dict>
						</array>
					</dict>
					<dict>
						<key>name</key>
						<string>string.quoted.other.template.sentinel</string>
						<key>begin</key>
						<string>`</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.begin.sentinel</string>
							</dict>
						</dict>
						<key>end</key>
						<string>`</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.string.end.sentinel</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#escapes</string>
							</dict>
							<dict>
								<key>include</key>
								<string>#interpolation</string>
							</dict>
						</array>
					</dict>
				</array>
				<key>repository</key>
				<dict>
					<key>escapes</key>
					<dict>
						<key>name</key>
						<string>constant.character.escape.sentinel</string>
						<key>match</key>
						<string>\\(x\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					</dict>
					<key>interpolation</key>
					<dict>
						<key>name</key>
						<string>meta.embedded.line.sentinel</string>
						<key>begin</key>
						<string>\$\{</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.embedded.begin.sentinel</string>
							</dict>
						</dict>
						<key>contentName</key>
						<string>source.sentinel</string>
						<key>end</key>
						<string>(\})</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.embedded.end.sentinel</string>
							</dict>
							<key>1</key>
							<dict>
								<key>name</key>
								<string>source.sentinel</string>
							</dict>
						</dict>
						<key>patterns</key>
						<array>
							<dict>
								<key>begin</key>
								<string>\{</string>
								<key>beginCaptures</key>
								<dict>
									<key>0</key>
									<dict>
										<key>name</key>
										<string>meta.brace.curly.sentinel</string>
									</dict>
								</dict>
								<key>end</key>
								<string>\}</string>
								<key>endCaptures</key>
								<dict>
									<key>0</key>
									<dict>
										<key>name</key>
										<string>meta.brace.curly.sentinel</string>
									</dict>
								</dict>
								<key>patterns</key>
								<array>
									<dict>
										<key>include</key>
										<string>$self</string>
									</dict>
								</array>
							</dict>
							<dict>
								<key>include</key>
								<string>$self</string>
							</dict>
						</array>
					</dict>
				</dict>
			</dict>
		</dict>
	</dict>
</plist>